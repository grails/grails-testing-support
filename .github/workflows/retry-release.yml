name: Retry Release
on:
  workflow_dispatch:
    inputs:
      release:
        description: The Grails Release (e.g. 2.3.1)
        required: true
      target_branch:
        description: The Target Branch (e.g. 2.3.x)
        required: true
jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['8']
    env:
      GIT_USER_NAME: puneetbehl
      GIT_USER_EMAIL: behlp@objectcomputing.com
      GRADLE_OPTS: -Xmx1500m -Dfile.encoding=UTF-8
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: "v${{ github.event.inputs.release }}"
          token: ${{ secrets.GH_TOKEN }}
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Extract Target Branch
        id: extract_branch
        run: |
          echo $TARGET_BRANCH
          echo ::set-output name=value::${TARGET_BRANCH}
        env:
          TARGET_BRANCH: ${{ github.event.inputs.target_branch }}
      - name: Set the current release version
        id: release_version
        run: echo ::set-output name=release_version::${VERSION}
        env:
          VERSION: ${{ github.event.inputs.release }}
      - name: Run Assemble
        id: assemble
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble
      - name: Export Gradle Properties
        uses: micronaut-projects/github-actions/export-gradle-properties@master
      - name: Publish Documentation
        id: docs
        if: steps.assemble.outcome == 'success'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: docs
      - name: Export Gradle Properties
        uses: micronaut-projects/github-actions/export-gradle-properties@master
      - name: Publish to Github Pages
        if: steps.docs.outcome == 'success'
        uses: micronaut-projects/github-pages-deploy-action@master
        env:
          BETA: ${{ contains(steps.release_version.outputs.release_version, 'M') || contains(steps.release_version.outputs.release_version, 'RC') }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: build/docs
          VERSION: ${{ steps.release_version.outputs.release_version }}
          COMMIT_EMAIL: ${{ env.GIT_USER_EMAIL }}
          COMMIT_NAME: ${{ env.GIT_USER_NAME }}
      - name: Run post-release
        if: steps.assemble.outcome == 'success'
        uses: micronaut-projects/github-actions/post-release@grails
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          SNAPSHOT_SUFFIX: -SNAPSHOT
          TARGET_BRANCH: ${{ github.event.inputs.target_branch }}
          RELEASE_VERSION: ${{ github.event.inputs.release }}